#!/bin/bash

######################################################################
############################### COMMON ###############################
######################################################################

KUBE="oc"

######################################################################
########################## IMAGE REPOSITORY ##########################
######################################################################

# TO ENABLE IMAGE PULL SECRETS, ${IMAGEREPO_SECRET} must have a value.
# ${IMAGEREPO_HOST } is added to Solace Image ${SOLBK_IMAGE} in shell scripts

IMAGEREPO_SECRET="registry-pull-secret"
IMAGEREPO_HOST="localhost"
IMAGEREPO_USER="docker-user"
IMAGEREPO_PASS="docker-pass"

######################################################################
############################## OPERATOR ##############################
######################################################################

SOLOP_IMAGE="pubsubplus-eventbroker-operator:1.2.0"
SOLOP_WATCH_NS="solace-namespace"

SOLOP_DERIVED_NS=`${KUBE} get deployment --all-namespaces -o custom-columns=NS:.metadata.namespace,NAME:.metadata.name | grep pubsubplus-eventbroker-operator | cut -d" " -f1`
[[ -n "${SOLOP_DERIVED_NS}" ]] && SOLOP_DERIVED_POD=`${KUBE} get pod -n ${SOLOP_DERIVED_NS} -o custom-columns=NAME:.metadata.name --no-headers`

SOLOP_CPU="500m"
SOLOP_MEM="512Mi"

######################################################################
############################### BROKER ###############################
######################################################################

SOLBK_NAME="solace-broker"
SOLBK_NS="solace-namespace"
SOLBK_IMAGE="solace-pubsub-standard"
SOLBK_IMG_TAG="latest"
SOLBK_REDUNDANCY="false"

SOLBK_SCALING_MAXCONN="100"
SOLBK_SCALING_MAXPOOL="10000"
SOLBK_SCALING_MAXQMSG="100"

SOLBK_MSGNODE_CPU="2"
SOLBK_MSGNODE_MEM="3410Mi"

SOLBK_STORAGECLASS="solace-storage-class"
SOLBK_STORAGE_MSGNODE="16100Mi"
SOLBK_STORAGE_MONNODE="2300Mi"

SOLBK_ADM_PASS="adminpassword123"
SOLBK_ADM_SECRET="solace-admin-secret"

# TO CREATE A SECRET CONTAINING SSL/TLS CERTIFICATES, ${SOLBK_SVR_SECRET} MUST HAVE A VALUE
SOLBK_SVR_SECRET="solace-server-secret"
SOLBK_TLS_CERT="/path/to/tls.crt"
SOLBK_TLS_CERTKEY="/path/to/tls.key"
SOLBK_TLS_CERTCAS=(
  "/path/to/ca/cert"
)

# add more values on top of its own namespace in case there are other brokers deployed in the same cluster but different namespace
SOLBK_ANTIAFFINITY_NS=("${SOLBK_NS}")
SOLBK_ANTIAFFINITY_WT=100

SOLBK_DIAG_DIR="/path/to/diag-configs/dir"

# OPTIONAL PARAMETER, COMMENT IT OR LEAVE IT BLANK IF AUTO ASSIGNMENT IS DESIRED
SOLBK_LOADBALANCER_IP="1.2.3.4"

SOLBK_DOMAINCERT_FOLDER="/path/to/domain/ca"
# associative array for domain certificates [CA-NAME] = 'cert filename'
declare -A SOLBK_DOMAINCERT_FILES=(
	[CERT_NAME]="cert.crt"
)

SOLBK_CLISCRIPTS_FOLDER="cliscripts"

REPL_MATE=mate-virtual-router-name # script detects if "v:" is present, adding it here is optional.
REPL_CONN_SSL=("host:port" "host1:port1" "host2:port2")
REPL_PSK="" # script will generate if left blank